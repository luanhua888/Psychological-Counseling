{"ast":null,"code":"var _jsxFileName = \"D:\\\\Captone\\\\Admin1\\\\Psychological-Counseling\\\\src\\\\components\\\\InfinityList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"./Grid\";\nimport ProductCard from \"./ProductCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfinityList = props => {\n  _s();\n\n  const perLoad = 6; // items each load\n\n  const listRef = useRef(null);\n  const [data, setData] = useState([]);\n  const [load, setLoad] = useState(true);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    setData(props.data.slice(0, perLoad));\n    setIndex(1);\n  }, [props.data]);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (listRef && listRef.current) {\n        if (window.scrollY + window.innerHeight >= listRef.current.clientHeight + listRef.current.offsetTop + 200) {\n          console.log(\"bottom reach\");\n          setLoad(true);\n        }\n      }\n    });\n  }, [listRef]);\n  useEffect(() => {\n    const getItems = () => {\n      const pages = Math.floor(props.data.length / perLoad);\n      const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1;\n\n      if (load && index <= maxIndex) {\n        const start = perLoad * index;\n        const end = start + perLoad;\n        setData(data.concat(props.data.slice(start, end)));\n        setIndex(index + 1);\n      }\n    };\n\n    getItems();\n    setLoad(false);\n  }, [load, index, data, props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: listRef,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      col: 3,\n      mdCol: 2,\n      smCol: 1,\n      gap: 20,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(ProductCard, {\n        img01: item.image01,\n        img02: item.image02,\n        name: item.title,\n        price: Number(item.price),\n        slug: item.slug,\n        skll: item.skills,\n        lang: item.languages\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfinityList, \"AENhqrXICbMD9iIt8+4R76Tu7cw=\");\n\n_c = InfinityList;\nInfinityList.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default InfinityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinityList\");","map":{"version":3,"sources":["D:/Captone/Admin1/Psychological-Counseling/src/components/InfinityList.jsx"],"names":["React","useEffect","useRef","useState","PropTypes","Grid","ProductCard","InfinityList","props","perLoad","listRef","data","setData","load","setLoad","index","setIndex","slice","window","addEventListener","current","scrollY","innerHeight","clientHeight","offsetTop","console","log","getItems","pages","Math","floor","length","maxIndex","start","end","concat","map","item","image01","image02","title","Number","price","slug","skills","languages","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Grid from \"./Grid\";\r\nimport ProductCard from \"./ProductCard\";\r\n\r\nconst InfinityList = (props) => {\r\n  const perLoad = 6; // items each load\r\n\r\n  const listRef = useRef(null);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const [index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(props.data.slice(0, perLoad));\r\n    setIndex(1);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (listRef && listRef.current) {\r\n        if (\r\n          window.scrollY + window.innerHeight >=\r\n          listRef.current.clientHeight + listRef.current.offsetTop + 200\r\n        ) {\r\n          console.log(\"bottom reach\");\r\n          setLoad(true);\r\n        }\r\n      }\r\n    });\r\n  }, [listRef]);\r\n\r\n  useEffect(() => {\r\n    const getItems = () => {\r\n      const pages = Math.floor(props.data.length / perLoad);\r\n      const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1;\r\n\r\n      if (load && index <= maxIndex) {\r\n        const start = perLoad * index;\r\n        const end = start + perLoad;\r\n\r\n        setData(data.concat(props.data.slice(start, end)));\r\n        setIndex(index + 1);\r\n      }\r\n    };\r\n    getItems();\r\n    setLoad(false);\r\n  }, [load, index, data, props.data]);\r\n\r\n  return (\r\n    <div ref={listRef}>\r\n      <Grid col={3} mdCol={2} smCol={1} gap={20}>\r\n        {data.map((item, index) => (\r\n          <ProductCard\r\n            key={index}\r\n            img01={item.image01}\r\n            img02={item.image02}\r\n            name={item.title}\r\n            price={Number(item.price)}\r\n            slug={item.slug}\r\n            skll={item.skills}\r\n            lang={item.languages}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nInfinityList.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default InfinityList;\r\n"]},"metadata":{},"sourceType":"module"}